name: Build OpenSSL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  prepare:
    name: Prepare
    runs-on: [ Windows ]
    steps:  
      - name: Get dependency version
        shell: cmd
        run: |
          perl --version
          nasm --version
      
  build:
    name: Build OpenSSL
    needs: [ prepare ]
    runs-on: [ Windows ]
    strategy:
      matrix:
        arch: [x86]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: 'circle81918/build_openssl'
          submodules: recursive

      - name: Build
        shell: cmd
        working-directory: circle81918/build_openssl
        run: build.bat ${{ matrix.arch }}

      - name: Pack Artifact
        shell: powershell
        working-directory: circle81918/build_openssl
        run: |
          [string]$ROOT = Get-Location
          $OUTPUT_DIR = "$ROOT\openssl\output\${{ matrix.arch }}" 
          Compress-Archive -Path $OUTPUT_DIR\* -DestinationPath $OUTPUT_DIR\openssl_${{ matrix.arch }}.zip

  create_release:
    name: Create Release
    if: github.ref == 'refs/heads/main'
    needs: [ build ]
    runs-on: [ Windows ]
    steps:
      - name: Get OpenSSL version
        id: get_version
        shell: powershell
        working-directory: circle81918/build_openssl/openssl
        run: |
          [string[]]$version = Get-Content -Path .\VERSION.dat | Select-String MAJOR, MINOR, PATCH
          $number = $version[0].Split("=")[-1] + "." + $version[1].Split("=")[-1] + "." + $version[2].Split("=")[-1]
          echo "::set-output name=version::$number"

      - name: Create Release
        id: create_release
        shell: powershell
        working-directory: circle81918/build_openssl
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: >
          hub release create
          -m "${{ steps.get_version.outputs.version }}"
          "${{ steps.get_version.outputs.version }}"

      - name: Upload Release Asset
        id: upload-release-asset
        shell: powershell
        working-directory: circle81918/build_openssl
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: >
          hub release edit
          -a ".\openssl\output\x64\openssl_x86.zip"
          -m "${{ steps.get_version.outputs.version }}"
          "${{ steps.get_version.outputs.version }}"
      
      - name: Send result to Slack 
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "OpenSSL build ${{ steps.get_version.outputs.version }} is generated! <https://github.com/circle81918/build_openssl/releases|Click here> for details!"
            }
        

  
